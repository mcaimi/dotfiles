#!/bin/sh

# determine where to place the log file
logfile="$HOME/.dkrc.log"
[ -d "$HOME/.local/share/xorg" ] && logfile="$HOME/.local/share/xorg/dkrc.log"
: > "$logfile"

# (re)load sxhkd for keybinds
if hash sxhkd >/dev/null 2>&1; then
  pkill sxhkd
  sxhkd -c "$HOME/.config/dk/sxhkdrc" &
fi

# setup xsession
$HOME/.config/dk/scripts/xsession_setup.sh

# set wallpaper
feh --bg-fill "$HOME/.config/dk/wallpaper/wallpaper" &

# setup environment
$HOME/.config/dk/scripts/setup_environment.sh

# load polybar
$HOME/.config/dk/polybar/load.sh

# start applets
$HOME/.config/dk/scripts/start_applets.sh

{ # compound command to redirect all output

  # workspace settings
  # initialize 10 workspaces (1-10) (default: 1/monitor)
  dkcmd set numws=10

  # default workspace '_' values used when allocating new workspaces
  # can be applied to all existing workspaces when passed 'apply' after ws=_
  dkcmd set ws=_ apply layout=tile master=1 stack=3 gap=2 msplit=0.5 ssplit=0.5

  # change workspace names (default: number == name)
  dkcmd set \
    ws=1  name="CLI" layout=tile stack=4 msplit=0.75 ssplit=0.75 \
    ws=2  name="WEB" \
    ws=3  name="CODE" \
    ws=4  name="MUS" \
    ws=5  name="PHOTO" \
    ws=6  name="DOCS" \
    ws=7  name="VIRT" \
    ws=8  name="CHAT" \
    ws=9  name="SYS" \
    ws=10 name="SCRT" layout=grid

  # global settings
  # focus windows when receiving activation and enable focus-follows-mouse
  dkcmd set focus_open=false focus_urgent=false focus_mouse=true

  # place clients at the tail and ignore size hints on tiled windows
  dkcmd set tile_tohead=0 tile_hints=false

  # minimum width/height for resizing, and minimum allowed on-screen when moving
  dkcmd set win_minwh=50 win_minxy=10

  # disable gaps and borders in single window layouts
  dkcmd set smart_gap=true smart_border=true

  # define mouse mod and move/resize buttons
  dkcmd set mouse mod=alt move=button1 resize=button3

  # borders
  # enable split borders and colours, width is overall width, outer width consumes some of width.
  # outer width must be less than width, outer width of 0 will be single borders
  dkcmd set border width=2 outer_width=1 \
    colour \
    focus='#6699cc' \
    unfocus='#444444' \
    urgent='#ee5555' \
    outer_focus='#222222' \
    outer_unfocus='#222222' \
    outer_urgent='#222222'

  # window rules
  # open window(s) on a specific workspace (assigned monitor)
  dkcmd rule class="^st$" ws=1
  dkcmd rule class="^firefox$" ws=2
  dkcmd rule class="^vscodium$" ws=3
  dkcmd rule class="^iaito$" ws=3
  dkcmd rule class="^imhex$" ws=3
  dkcmd rule class="^gimp$" ws=5
  dkcmd rule class="^darktable$" ws=5
  dkcmd rule class="^rawtherapee$" ws=5
  dkcmd rule class="^zathura$" ws=6
  dkcmd rule class="^obsidian$" ws=6
  dkcmd rule class="^xfreerdp$" ws=7
  dkcmd rule class="^virt-manager$" ws=7
  dkcmd rule class="^virt-viewer$" ws=7
  dkcmd rule class="^signal$" ws=8
  dkcmd rule class="^telegramdesktop$" ws=8
  dkcmd rule class="^nemo$" ws=9
  dkcmd rule class="^Proton Mail Bridge$" instance="^protonmail-bridge$" ws=10
  dkcmd rule class="^Spotify$" instance="^spotify$" ws=4

  # open window(s) in a floating state
  dkcmd rule class="^(pavucontrol|transmission-gtk|lxappearance|lightdm-gtk-greeter-settings|keepassxc|megasync|mpv|vlc)$" float=true
  dkcmd rule class="^(dosbox|retroarch|virt-manager|virt-viewer)$" float=true ws=7
  dkcmd rule class="^(tabbed|Spotify)$" instance="^(quickmedia|spotify)$" float=true
  dkcmd rule class="^steam$" float=true

  # apply current rule set to all existing windows
  dkcmd rule apply '*'

} >> "$logfile" 2>&1 # append responses

# inform of any errors in a notification
if grep -q 'error:' "$logfile"; then
  hash notify-send && notify-send -t 0 -u critical "dkrc has errors" \
    "$(awk '/error:/ {sub(/^error: /, ""); gsub(/</, "\<"); print}' "$logfile")"
  exit 1
fi

exit 0
